{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Line2, LineMaterial, LineSegmentsGeometry } from 'three-stdlib';\nconst context = /*#__PURE__*/React.createContext(null);\n\nconst arrColor = color => color instanceof THREE.Color ? color.toArray() : color;\n\nconst arrPos = pos => pos instanceof THREE.Vector3 ? pos.toArray() : pos;\n\nconst Segments = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  const {\n    limit = 1000,\n    lineWidth = 1.0,\n    children,\n    ...rest\n  } = props;\n  const [segments, setSegments] = React.useState([]);\n  const [line] = React.useState(() => new Line2());\n  const [material] = React.useState(() => new LineMaterial());\n  const [geometry] = React.useState(() => new LineSegmentsGeometry());\n  const [resolution] = React.useState(() => new THREE.Vector2(512, 512));\n  const [positions] = React.useState(() => Array(limit).fill(0));\n  const [colors] = React.useState(() => Array(limit).fill(1));\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setSegments(segments => [...segments, ref]);\n      return () => setSegments(segments => segments.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  useFrame(() => {\n    positions.length = segments.length * 6;\n    colors.length = segments.length * 6;\n    segments.forEach((segmentRef, i) => {\n      const segment = segmentRef.current;\n\n      if (segment) {\n        const segmentStart = arrPos(segment.start);\n        const segmentEnd = arrPos(segment.end);\n        const segmentColor = arrColor(segment.color);\n\n        for (var j = 0; j < 3; j++) {\n          positions[i * 6 + j] = segmentStart[j];\n          positions[i * 6 + j + 3] = segmentEnd[j];\n          colors[i * 6 + j] = segmentColor[j];\n          colors[i * 6 + j + 3] = segmentColor[j];\n        }\n      }\n    });\n    geometry.setColors(colors);\n    geometry.setPositions(positions);\n    line.computeLineDistances();\n  });\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: line,\n    ref: forwardedRef\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: geometry,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    attach: \"material\",\n    vertexColors: true,\n    resolution: resolution,\n    linewidth: lineWidth\n  }, rest)), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nconst Segment = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  const {\n    start,\n    end,\n    color\n  } = props;\n  const api = React.useContext(context);\n  if (!api) throw 'Segment must used inside Segments component.';\n  const ref = React.useRef({\n    start: [0, 0, 0],\n    end: [0, 0, 0],\n    color: [1, 1, 1]\n  });\n  React.useLayoutEffect(() => api.subscribe(forwardedRef || ref), []);\n  React.useLayoutEffect(() => {\n    var currRef = forwardedRef || ref;\n    start && Object.assign(currRef.current, {\n      start\n    });\n    end && Object.assign(currRef.current, {\n      end\n    });\n    color && Object.assign(currRef.current, {\n      color\n    });\n  }, [start, end, color]);\n  return null;\n});\nexport { Segment, Segments };","map":{"version":3,"sources":["/Users/chenyuf2/Desktop/my-room-3d/node_modules/@react-three/drei/core/Segments.js"],"names":["_extends","THREE","React","useFrame","Line2","LineMaterial","LineSegmentsGeometry","context","createContext","arrColor","color","Color","toArray","arrPos","pos","Vector3","Segments","forwardRef","props","forwardedRef","limit","lineWidth","children","rest","segments","setSegments","useState","line","material","geometry","resolution","Vector2","positions","Array","fill","colors","api","useMemo","subscribe","ref","filter","item","current","length","forEach","segmentRef","i","segment","segmentStart","start","segmentEnd","end","segmentColor","j","setColors","setPositions","computeLineDistances","createElement","object","attach","vertexColors","linewidth","Provider","value","Segment","useContext","useRef","useLayoutEffect","currRef","Object","assign"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,KAAT,EAAgBC,YAAhB,EAA8BC,oBAA9B,QAA0D,cAA1D;AAEA,MAAMC,OAAO,GAAG,aAAaL,KAAK,CAACM,aAAN,CAAoB,IAApB,CAA7B;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,YAAYT,KAAK,CAACU,KAAvB,GAA+BD,KAAK,CAACE,OAAN,EAA/B,GAAiDF,KAA3E;;AAEA,MAAMG,MAAM,GAAGC,GAAG,IAAIA,GAAG,YAAYb,KAAK,CAACc,OAArB,GAA+BD,GAAG,CAACF,OAAJ,EAA/B,GAA+CE,GAArE;;AAEA,MAAME,QAAQ,GAAG,aAAad,KAAK,CAACe,UAAN,CAAiB,CAACC,KAAD,EAAQC,YAAR,KAAyB;AACtE,QAAM;AACJC,IAAAA,KAAK,GAAG,IADJ;AAEJC,IAAAA,SAAS,GAAG,GAFR;AAGJC,IAAAA,QAHI;AAIJ,OAAGC;AAJC,MAKFL,KALJ;AAMA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BvB,KAAK,CAACwB,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACC,IAAD,IAASzB,KAAK,CAACwB,QAAN,CAAe,MAAM,IAAItB,KAAJ,EAArB,CAAf;AACA,QAAM,CAACwB,QAAD,IAAa1B,KAAK,CAACwB,QAAN,CAAe,MAAM,IAAIrB,YAAJ,EAArB,CAAnB;AACA,QAAM,CAACwB,QAAD,IAAa3B,KAAK,CAACwB,QAAN,CAAe,MAAM,IAAIpB,oBAAJ,EAArB,CAAnB;AACA,QAAM,CAACwB,UAAD,IAAe5B,KAAK,CAACwB,QAAN,CAAe,MAAM,IAAIzB,KAAK,CAAC8B,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,CAArB,CAArB;AACA,QAAM,CAACC,SAAD,IAAc9B,KAAK,CAACwB,QAAN,CAAe,MAAMO,KAAK,CAACb,KAAD,CAAL,CAAac,IAAb,CAAkB,CAAlB,CAArB,CAApB;AACA,QAAM,CAACC,MAAD,IAAWjC,KAAK,CAACwB,QAAN,CAAe,MAAMO,KAAK,CAACb,KAAD,CAAL,CAAac,IAAb,CAAkB,CAAlB,CAArB,CAAjB;AACA,QAAME,GAAG,GAAGlC,KAAK,CAACmC,OAAN,CAAc,OAAO;AAC/BC,IAAAA,SAAS,EAAEC,GAAG,IAAI;AAChBd,MAAAA,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAce,GAAd,CAAb,CAAX;AACA,aAAO,MAAMd,WAAW,CAACD,QAAQ,IAAIA,QAAQ,CAACgB,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiBH,GAAG,CAACG,OAA7C,CAAb,CAAxB;AACD;AAJ8B,GAAP,CAAd,EAKR,EALQ,CAAZ;AAMAvC,EAAAA,QAAQ,CAAC,MAAM;AACb6B,IAAAA,SAAS,CAACW,MAAV,GAAmBnB,QAAQ,CAACmB,MAAT,GAAkB,CAArC;AACAR,IAAAA,MAAM,CAACQ,MAAP,GAAgBnB,QAAQ,CAACmB,MAAT,GAAkB,CAAlC;AACAnB,IAAAA,QAAQ,CAACoB,OAAT,CAAiB,CAACC,UAAD,EAAaC,CAAb,KAAmB;AAClC,YAAMC,OAAO,GAAGF,UAAU,CAACH,OAA3B;;AAEA,UAAIK,OAAJ,EAAa;AACX,cAAMC,YAAY,GAAGnC,MAAM,CAACkC,OAAO,CAACE,KAAT,CAA3B;AACA,cAAMC,UAAU,GAAGrC,MAAM,CAACkC,OAAO,CAACI,GAAT,CAAzB;AACA,cAAMC,YAAY,GAAG3C,QAAQ,CAACsC,OAAO,CAACrC,KAAT,CAA7B;;AAEA,aAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BrB,UAAAA,SAAS,CAACc,CAAC,GAAG,CAAJ,GAAQO,CAAT,CAAT,GAAuBL,YAAY,CAACK,CAAD,CAAnC;AACArB,UAAAA,SAAS,CAACc,CAAC,GAAG,CAAJ,GAAQO,CAAR,GAAY,CAAb,CAAT,GAA2BH,UAAU,CAACG,CAAD,CAArC;AACAlB,UAAAA,MAAM,CAACW,CAAC,GAAG,CAAJ,GAAQO,CAAT,CAAN,GAAoBD,YAAY,CAACC,CAAD,CAAhC;AACAlB,UAAAA,MAAM,CAACW,CAAC,GAAG,CAAJ,GAAQO,CAAR,GAAY,CAAb,CAAN,GAAwBD,YAAY,CAACC,CAAD,CAApC;AACD;AACF;AACF,KAfD;AAgBAxB,IAAAA,QAAQ,CAACyB,SAAT,CAAmBnB,MAAnB;AACAN,IAAAA,QAAQ,CAAC0B,YAAT,CAAsBvB,SAAtB;AACAL,IAAAA,IAAI,CAAC6B,oBAAL;AACD,GAtBO,CAAR;AAuBA,SAAO,aAAatD,KAAK,CAACuD,aAAN,CAAoB,WAApB,EAAiC;AACnDC,IAAAA,MAAM,EAAE/B,IAD2C;AAEnDY,IAAAA,GAAG,EAAEpB;AAF8C,GAAjC,EAGjB,aAAajB,KAAK,CAACuD,aAAN,CAAoB,WAApB,EAAiC;AAC/CC,IAAAA,MAAM,EAAE7B,QADuC;AAE/C8B,IAAAA,MAAM,EAAE;AAFuC,GAAjC,CAHI,EAMhB,aAAazD,KAAK,CAACuD,aAAN,CAAoB,WAApB,EAAiCzD,QAAQ,CAAC;AACzD0D,IAAAA,MAAM,EAAE9B,QADiD;AAEzD+B,IAAAA,MAAM,EAAE,UAFiD;AAGzDC,IAAAA,YAAY,EAAE,IAH2C;AAIzD9B,IAAAA,UAAU,EAAEA,UAJ6C;AAKzD+B,IAAAA,SAAS,EAAExC;AAL8C,GAAD,EAMvDE,IANuD,CAAzC,CANG,EAYT,aAAarB,KAAK,CAACuD,aAAN,CAAoBlD,OAAO,CAACuD,QAA5B,EAAsC;AAC5DC,IAAAA,KAAK,EAAE3B;AADqD,GAAtC,EAErBd,QAFqB,CAZJ,CAApB;AAeD,CA1D6B,CAA9B;AA2DA,MAAM0C,OAAO,GAAG,aAAa9D,KAAK,CAACe,UAAN,CAAiB,CAACC,KAAD,EAAQC,YAAR,KAAyB;AACrE,QAAM;AACJ8B,IAAAA,KADI;AAEJE,IAAAA,GAFI;AAGJzC,IAAAA;AAHI,MAIFQ,KAJJ;AAKA,QAAMkB,GAAG,GAAGlC,KAAK,CAAC+D,UAAN,CAAiB1D,OAAjB,CAAZ;AACA,MAAI,CAAC6B,GAAL,EAAU,MAAM,8CAAN;AACV,QAAMG,GAAG,GAAGrC,KAAK,CAACgE,MAAN,CAAa;AACvBjB,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADgB;AAEvBE,IAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFkB;AAGvBzC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAHgB,GAAb,CAAZ;AAKAR,EAAAA,KAAK,CAACiE,eAAN,CAAsB,MAAM/B,GAAG,CAACE,SAAJ,CAAcnB,YAAY,IAAIoB,GAA9B,CAA5B,EAAgE,EAAhE;AACArC,EAAAA,KAAK,CAACiE,eAAN,CAAsB,MAAM;AAC1B,QAAIC,OAAO,GAAGjD,YAAY,IAAIoB,GAA9B;AACAU,IAAAA,KAAK,IAAIoB,MAAM,CAACC,MAAP,CAAcF,OAAO,CAAC1B,OAAtB,EAA+B;AACtCO,MAAAA;AADsC,KAA/B,CAAT;AAGAE,IAAAA,GAAG,IAAIkB,MAAM,CAACC,MAAP,CAAcF,OAAO,CAAC1B,OAAtB,EAA+B;AACpCS,MAAAA;AADoC,KAA/B,CAAP;AAGAzC,IAAAA,KAAK,IAAI2D,MAAM,CAACC,MAAP,CAAcF,OAAO,CAAC1B,OAAtB,EAA+B;AACtChC,MAAAA;AADsC,KAA/B,CAAT;AAGD,GAXD,EAWG,CAACuC,KAAD,EAAQE,GAAR,EAAazC,KAAb,CAXH;AAYA,SAAO,IAAP;AACD,CA3B4B,CAA7B;AA6BA,SAASsD,OAAT,EAAkBhD,QAAlB","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Line2, LineMaterial, LineSegmentsGeometry } from 'three-stdlib';\n\nconst context = /*#__PURE__*/React.createContext(null);\n\nconst arrColor = color => color instanceof THREE.Color ? color.toArray() : color;\n\nconst arrPos = pos => pos instanceof THREE.Vector3 ? pos.toArray() : pos;\n\nconst Segments = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  const {\n    limit = 1000,\n    lineWidth = 1.0,\n    children,\n    ...rest\n  } = props;\n  const [segments, setSegments] = React.useState([]);\n  const [line] = React.useState(() => new Line2());\n  const [material] = React.useState(() => new LineMaterial());\n  const [geometry] = React.useState(() => new LineSegmentsGeometry());\n  const [resolution] = React.useState(() => new THREE.Vector2(512, 512));\n  const [positions] = React.useState(() => Array(limit).fill(0));\n  const [colors] = React.useState(() => Array(limit).fill(1));\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setSegments(segments => [...segments, ref]);\n      return () => setSegments(segments => segments.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  useFrame(() => {\n    positions.length = segments.length * 6;\n    colors.length = segments.length * 6;\n    segments.forEach((segmentRef, i) => {\n      const segment = segmentRef.current;\n\n      if (segment) {\n        const segmentStart = arrPos(segment.start);\n        const segmentEnd = arrPos(segment.end);\n        const segmentColor = arrColor(segment.color);\n\n        for (var j = 0; j < 3; j++) {\n          positions[i * 6 + j] = segmentStart[j];\n          positions[i * 6 + j + 3] = segmentEnd[j];\n          colors[i * 6 + j] = segmentColor[j];\n          colors[i * 6 + j + 3] = segmentColor[j];\n        }\n      }\n    });\n    geometry.setColors(colors);\n    geometry.setPositions(positions);\n    line.computeLineDistances();\n  });\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: line,\n    ref: forwardedRef\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: geometry,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    attach: \"material\",\n    vertexColors: true,\n    resolution: resolution,\n    linewidth: lineWidth\n  }, rest)), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nconst Segment = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  const {\n    start,\n    end,\n    color\n  } = props;\n  const api = React.useContext(context);\n  if (!api) throw 'Segment must used inside Segments component.';\n  const ref = React.useRef({\n    start: [0, 0, 0],\n    end: [0, 0, 0],\n    color: [1, 1, 1]\n  });\n  React.useLayoutEffect(() => api.subscribe(forwardedRef || ref), []);\n  React.useLayoutEffect(() => {\n    var currRef = forwardedRef || ref;\n    start && Object.assign(currRef.current, {\n      start\n    });\n    end && Object.assign(currRef.current, {\n      end\n    });\n    color && Object.assign(currRef.current, {\n      color\n    });\n  }, [start, end, color]);\n  return null;\n});\n\nexport { Segment, Segments };\n"]},"metadata":{},"sourceType":"module"}